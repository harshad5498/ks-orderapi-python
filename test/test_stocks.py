# coding: utf-8

"""
    KS Trade API's

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.stocks import Stocks  # noqa: E501
from openapi_client.rest import ApiException

class TestStocks(unittest.TestCase):
    """Stocks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Stocks
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.stocks.Stocks()  # noqa: E501
        if include_optional :
            return Stocks(
                instrumentToken = 56, 
                normal = 1.337, 
                supermultiple = 1.337, 
                mtf = 1.337, 
                actualMTM = 1.337, 
                actualPNL = 1.337, 
                averageStockPrice = 1.337, 
                bnstCredit = 1.337, 
                buyOpenQtyLot = 56, 
                buyOpenValue = 1.337, 
                delStockPrice = 1.337, 
                deliveryStatus = 56, 
                exchange = '0', 
                fnoBnstCredit = 56, 
                fnoPremium = 56, 
                hairCut = 56, 
                holdStock = 56, 
                instrumentName = '0', 
                multiple = 56, 
                multipleType = 56, 
                mfHairCut = 56, 
                netTrdQtyLot = 56, 
                netTrdValue = 1.337, 
                openingStockValue = 1.337, 
                premium = 1.337, 
                previousMTMTrades = 56, 
                realizedPL = 1.337, 
                sellOpenQtyLot = 56, 
                sellOpenValue = 56, 
                securityValuation = 56, 
                securityValuationMTF = 1.337, 
                stockBalance = 56
            )
        else :
            return Stocks(
        )

    def testStocks(self):
        """Test Stocks"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
