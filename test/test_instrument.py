# coding: utf-8

"""
    KS Trade API's

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.instrument import Instrument  # noqa: E501
from openapi_client.rest import ApiException

class TestInstrument(unittest.TestCase):
    """Instrument unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Instrument
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.instrument.Instrument()  # noqa: E501
        if include_optional :
            return Instrument(
                instrumentToken = 1.337, 
                lastPrice = 1.337, 
                netChange = 1.337, 
                netChangePercent = 1.337, 
                averageTradedPrice = 1.337, 
                lastTradedQuantity = 1.337, 
                lastTradedTime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                openInterest = 1.337, 
                totalTradeQuantity = 1.337, 
                exchange = '0', 
                instrumentName = '0', 
                segment = '0', 
                ohlc = openapi_client.models.ohlc_quote.OHLCQuote(
                    instrument_name = '0', 
                    instrument_token = 56, 
                    open = 1.337, 
                    high = 1.337, 
                    low = 1.337, 
                    close = 1.337, ), 
                depth = openapi_client.models.depth.depth(
                    buy = [
                        openapi_client.models.depth_buy.DepthBuy(
                            price = 1.337, 
                            quantity = 56, 
                            orders = 56, )
                        ], 
                    sell = [
                        openapi_client.models.depth_sell.DepthSell(
                            price = 1.337, 
                            quantity = 56, 
                            orders = 56, )
                        ], )
            )
        else :
            return Instrument(
        )

    def testInstrument(self):
        """Test Instrument"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
